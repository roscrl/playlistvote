{{define "playlist_view" }}
    <div class="flex items-center justify-center mt-[30px] image-container">
        <div class="shrink-0 w-[300px] h-[300px] rounded-[6px] bg-gray-300 animate-pulse opacity-20 relative"
             x-data="{ isLoadingPlaylistImage: true }"
             x-init="() => {
                            $el.classList.remove('bg-gray-300', 'animate-pulse', 'opacity-20');
                            $nextTick(() => { if ($refs.img.complete) $refs.img.dispatchEvent(new Event('load')) })
                        }"
        >
            <div x-cloak>
                <div class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-[calc(100%+5px)] h-[calc(100%+5px)] -z-10"
                     style="background-image: linear-gradient(45deg,
                     {{ index .playlist.ColorsCommonFour 0  }},
                     {{ index .playlist.ColorsCommonFour 1  }},
                     {{ index .playlist.ColorsCommonFour 2  }},
                     {{ index .playlist.ColorsCommonFour 3  }}
                             );
                             filter: blur(10px);
                             opacity: 0.7;
                             box-shadow: 0 0 20px rgba(0, 0, 0, 0.5)">
                </div>

                <div x-show="isLoadingPlaylistImage"
                     class="w-[300px] h-[300px] rounded-[6px] bg-gray-300 animate-pulse opacity-20">
                </div>

                <img src="{{ .playlist.LargestImageURL }}"
                     x-ref="img"
                     @load="isLoadingPlaylistImage = false"
                     class="w-[300px] h-[300px] rounded-[6px] transition-opacity duration-100 ease-in-out opacity-0 object-cover"
                     :class="{'opacity-100': !isLoadingPlaylistImage}"
                     alt="{{ .playlist.Name }} playlist image"
                     loading="lazy">
            </div>
        </div>
    </div>

    <div class="mt-3 mb-[60px]">
        <span class="text-2xl ml-2">{{ .playlist.Name }}</span>

        <div id="tracks" class="flex flex-col mt-2 leading-none">
            {{ range .playlist.Tracks.Items }}
                <button {{if not .Track.PreviewURL}}disabled{{end}} class="flex justify-between relative p-1 px-3 w-full rounded-sm text-left items-center
                    {{if .Track.PreviewURL}}
                        active:bg-gray-100
                    {{else}}
                        opacity-50 cursor-not-allowed
                    {{end}}
                    " data-preview-url="{{.Track.PreviewURL}}" data-album-image="{{.Track.SmallestAlbumImageURL}}">
                    <div>
                        <span class="text-md block" data-name="{{.Track.Name}}">
                            {{ .Track.Name }}
                        </span>

                        <span class="text-xs" data-artists="{{ .Track.ArtistsCommaSeparated }}">
                        {{ .Track.ArtistsCommaSeparated }}
                        </span>
                        <hr class="w-full -left-2 absolute h-px mt-[2px] bg-gray-200 border-0 opacity-50">
                    </div>
                </button>
            {{ end }}
        </div>
    </div>
{{ end }}

{{template "layout.tmpl" .}}

{{define "content"}}
    {{ template "playlist_view" .}}
{{end}}

{{ if .first_track_with_preview_url}}
    <div class="fixed bg-slate-900 text-white bottom-1 left-1 right-1 h-[50px] rounded-[4px]">
        <div class="flex w-full justify-between items-center">
            <div class="flex items-center shrink min-w-0">
                <img id="currently-playing-track-album-image" src="{{ .first_track_with_preview_url.SmallestAlbumImageURL }}" class="h-[50px] p-[2px] rounded-[5px]">
                <div class="ml-2 text-md flex-col truncate overflow-hidden">
                <span id="currently-playing-track-name" class="text-md block leading-none truncate overflow-hidden">
                    {{.first_track_with_preview_url.Name}}
                </span>
                    <span id="currently-playing-track-artists" class="text-xs block leading-none mt-[4px] truncate overflow-hidden">
                    {{ .first_track_with_preview_url.ArtistsCommaSeparated }}
                </span>
                </div>
            </div>
            <div class="flex shrink-0">
                <audio id="audio-player" src="{{.first_track_with_preview_url.PreviewURL}}" preload="none" loop></audio>
                <a href="{{ .playlist.ExternalUrls.Spotify }}" id="open-playlist-in-spotify" class="flex mr-1 text-xs items-center gap-[4px] mr-2 ml-2">
                    <svg width="23" height="23" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd" clip-rule="evenodd"
                              d="M38.1966 21.2764C30.4604 16.6821 17.6998 16.2597 10.3146 18.5011C9.12845 18.861 7.87433 18.1915 7.51523 17.0056C7.15585 15.8189 7.82446 14.5656 9.01123 14.2051C17.4891 11.6318 31.5819 12.1288 40.4879 17.4155C41.5549 18.0488 41.9045 19.4265 41.2723 20.4914C40.6395 21.5581 39.2607 21.9098 38.1966 21.2764ZM37.9433 28.0812C37.4005 28.9619 36.249 29.2381 35.3694 28.6973C28.92 24.733 19.0848 23.5843 11.4544 25.9005C10.4651 26.1994 9.41991 25.6417 9.11927 24.6539C8.82122 23.6645 9.37921 22.6214 10.3671 22.3204C19.0837 19.6752 29.9199 20.9563 37.3277 25.5088C38.2072 26.0504 38.4841 27.2025 37.9433 28.0812ZM35.0066 34.6163C34.5753 35.3236 33.6545 35.5451 32.9498 35.1141C27.314 31.6696 20.2203 30.8918 11.8662 32.7999C11.0612 32.9844 10.2588 32.48 10.0753 31.6753C9.89077 30.8703 10.3935 30.0678 11.2002 29.8841C20.3424 27.7943 28.1844 28.6936 34.5102 32.5591C35.2155 32.9899 35.4376 33.9113 35.0066 34.6163ZM23.9999 0C10.7454 0 0 10.7451 0 23.9996C0 37.2555 10.7454 48 23.9999 48C37.2549 48 48 37.2555 48 23.9996C48 10.7451 37.2549 0 23.9999 0Z"
                              fill="white"/>
                    </svg>
                    <span class="block uppercase text-xs">Open Spotify</span>
                </a>
                <button id="play-or-pause" class="mr-1">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-8 h-8">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.348a1.125 1.125 0 010 1.971l-11.54 6.347a1.125 1.125 0 01-1.667-.985V5.653z"/>
                    </svg>
                </button>
            </div>
        </div>
    </div>
{{end}}

<script type="module">
    const audioPlayer = document.getElementById("audio-player")
    const currentlyPlayingTrackAlbumImage = document.getElementById("currently-playing-track-album-image")
    const currentlyPlayingTrackName = document.getElementById("currently-playing-track-name")
    const currentlyPlayingTrackArtists = document.getElementById("currently-playing-track-artists")

    const playOrPauseButton = document.getElementById("play-or-pause")

    let audioIsPlaying = false

    playOrPauseButton.addEventListener("click", () => {
        if (audioIsPlaying === false) {
            play()
        } else {
            pause()
        }
    });

    const tracks = document.getElementById("tracks")
    tracks.childNodes.forEach((track) => {
        track.addEventListener("click", () => {
            const previewURL = track.dataset.previewUrl
            const albumImage = track.dataset.albumImage

            const name = track.querySelector("[data-name]").dataset.name
            const artists = track.querySelector("[data-artists]").dataset.artists

            play(previewURL, albumImage, name, artists)
        })
    })

    function play(srcTrack, albumImage, name, artists) {
        if (srcTrack) audioPlayer.src = srcTrack
        if (albumImage) currentlyPlayingTrackAlbumImage.src = albumImage
        if (name) currentlyPlayingTrackName.innerText = name
        if (artists) currentlyPlayingTrackArtists.innerText = artists

        audioPlayer.play()
        playOrPauseButton.innerHTML = `
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-8 h-8">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 5.25v13.5m-7.5-13.5v13.5" />
                </svg>
            `
        audioIsPlaying = true
    }

    function pause() {
        audioPlayer.pause()
        playOrPauseButton.innerHTML = `
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-8 h-8">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.348a1.125 1.125 0 010 1.971l-11.54 6.347a1.125 1.125 0 01-1.667-.985V5.653z"/>
                </svg>
            `
        audioIsPlaying = false
    }
</script>
