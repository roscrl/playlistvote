function f(e){e.directive("intersect",(t,{value:l,expression:u,modifiers:n},{evaluateLater:r,cleanup:o})=>{let i=r(u),a={rootMargin:x(n),threshold:d(n)},c=new IntersectionObserver(s=>{s.forEach(h=>{h.isIntersecting!==(l==="leave")&&(i(),n.includes("once")&&c.disconnect())})},a);c.observe(t),o(()=>{c.disconnect()})})}function d(e){if(e.includes("full"))return .99;if(e.includes("half"))return .5;if(!e.includes("threshold"))return 0;let t=e[e.indexOf("threshold")+1];return t==="100"?1:t==="0"?0:+`.${t}`}function v(e){let t=e.match(/^(-?[0-9]+)(px|%)?$/);return t?t[1]+(t[2]||"px"):void 0}function x(e){const t="margin",l="0px 0px 0px 0px",u=e.indexOf(t);if(u===-1)return l;let n=[];for(let r=1;r<5;r++)n.push(v(e[u+r]||""));return n=n.filter(r=>r!==void 0),n.length?n.join(" ").trim():l}var g=f;export{g as default};
